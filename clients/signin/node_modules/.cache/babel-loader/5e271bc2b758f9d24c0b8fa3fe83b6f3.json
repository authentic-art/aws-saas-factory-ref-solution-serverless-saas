{"ast":null,"code":"import _classCallCheck from\"/Users/l1/WebstormProjects/Amplify-AA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/l1/WebstormProjects/Amplify-AA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/l1/WebstormProjects/Amplify-AA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/l1/WebstormProjects/Amplify-AA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from'react';import{Link,Redirect}from'react-router-dom';import{Auth}from'aws-amplify';import{Form,Icon,Spin,Input,Button,notification,Row,Col}from'antd';/** Presentational */import FormWrapper from'../../Components/Styled/FormWrapper';/** App theme */import{colors}from'../../Themes/Colors';var ForgotPasswordContainer=/*#__PURE__*/function(_React$Component){_inherits(ForgotPasswordContainer,_React$Component);var _super=_createSuper(ForgotPasswordContainer);function ForgotPasswordContainer(){var _this;_classCallCheck(this,ForgotPasswordContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={username:'',redirect:false,loading:false};_this.handleSubmit=function(event){event.preventDefault();_this.props.form.validateFields(function(err,values){if(!err){var username=values.username;_this.setState({loading:true,username:username});Auth.forgotPassword(username).then(function(data){notification.success({message:'Redirecting you in a few!',description:'Account confirmed successfully!',placement:'topRight',duration:1.5,onClose:function onClose(){_this.setState({redirect:true});}});}).catch(function(err){notification.error({message:'User confirmation failed',description:err.message,placement:'topRight',duration:1.5});_this.setState({loading:false});});}});};return _this;}_createClass(ForgotPasswordContainer,[{key:\"render\",value:function render(){var getFieldDecorator=this.props.form.getFieldDecorator;var _this$state=this.state,loading=_this$state.loading,redirect=_this$state.redirect,username=_this$state.username;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormWrapper,{onSubmit:this.handleSubmit,className:\"login-form\"},/*#__PURE__*/React.createElement(Form.Item,null,getFieldDecorator('username',{rules:[{required:true,message:'Please input your username!'}]})(/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(Icon,{type:\"user\",style:{color:colors.transparentBlack}}),placeholder:\"Username\"}))),/*#__PURE__*/React.createElement(Form.Item,{className:\"text-center\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:24},/*#__PURE__*/React.createElement(Button,{style:{width:'100%'},type:\"primary\",htmlType:\"submit\",className:\"login-form-button\"},loading?/*#__PURE__*/React.createElement(Spin,{indicator:/*#__PURE__*/React.createElement(Icon,{type:\"loading\",style:{fontSize:24},spin:true})}):'Confirm username')),/*#__PURE__*/React.createElement(Col,{lg:24},/*#__PURE__*/React.createElement(Link,{to:\"/login\"},\"Ooh! Wait! I've remembered!\"))))),redirect&&/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/reset-password',search:\"?username=\".concat(username)}}));}}]);return ForgotPasswordContainer;}(React.Component);export default Form.create()(ForgotPasswordContainer);","map":{"version":3,"names":["React","Link","Redirect","Auth","Form","Icon","Spin","Input","Button","notification","Row","Col","FormWrapper","colors","ForgotPasswordContainer","state","username","redirect","loading","handleSubmit","event","preventDefault","props","form","validateFields","err","values","setState","forgotPassword","then","data","success","message","description","placement","duration","onClose","catch","error","getFieldDecorator","rules","required","color","transparentBlack","width","fontSize","pathname","search","Component","create"],"sources":["/Users/l1/WebstormProjects/Amplify-AA/src/Containers/ForgotPasswordContainer/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Auth } from 'aws-amplify';\nimport { Form, Icon, Spin, Input, Button, notification, Row, Col } from 'antd';\n\n/** Presentational */\nimport FormWrapper from '../../Components/Styled/FormWrapper';\n\n/** App theme */\nimport { colors } from '../../Themes/Colors';\n\ntype Props = {\n  form: any;\n};\n\ntype State = {\n  username: string;\n  redirect: boolean;\n  loading: boolean;\n};\n\nclass ForgotPasswordContainer extends React.Component<Props, State> {\n  state = {\n    username: '',\n    redirect: false,\n    loading: false\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    this.props.form.validateFields((err: { message: string }, values: { username: string }) => {\n      if (!err) {\n        let { username } = values;\n\n        this.setState({\n          loading: true,\n          username\n        });\n\n        Auth.forgotPassword(username)\n          .then(data => {\n            notification.success({\n              message: 'Redirecting you in a few!',\n              description: 'Account confirmed successfully!',\n              placement: 'topRight',\n              duration: 1.5,\n              onClose: () => {\n                this.setState({ redirect: true });\n              }\n            });\n          })\n          .catch(err => {\n            notification.error({\n              message: 'User confirmation failed',\n              description: err.message,\n              placement: 'topRight',\n              duration: 1.5\n            });\n            this.setState({ loading: false });\n          });\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { loading, redirect, username } = this.state;\n\n    return (\n      <React.Fragment>\n        <FormWrapper onSubmit={this.handleSubmit} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator('username', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your username!'\n                }\n              ]\n            })(\n              <Input prefix={<Icon type=\"user\" style={{ color: colors.transparentBlack }} />} placeholder=\"Username\" />\n            )}\n          </Form.Item>\n          <Form.Item className=\"text-center\">\n            <Row>\n              <Col lg={24}>\n                <Button style={{ width: '100%' }} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                  {loading ? (\n                    <Spin indicator={<Icon type=\"loading\" style={{ fontSize: 24 }} spin />} />\n                  ) : (\n                    'Confirm username'\n                  )}\n                </Button>\n              </Col>\n              <Col lg={24}>\n                <Link to=\"/login\">Ooh! Wait! I've remembered!</Link>\n              </Col>\n            </Row>\n          </Form.Item>\n        </FormWrapper>\n        {redirect && (\n          <Redirect\n            to={{\n              pathname: '/reset-password',\n              search: `?username=${username}`\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Form.create()(ForgotPasswordContainer);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}