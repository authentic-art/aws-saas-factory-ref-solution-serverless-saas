{"ast":null,"code":"var _jsxFileName = \"/Users/l1/WebstormProjects/Amplify-AA/src/Navigation/PrivateRoute.tsx\";\nimport * as React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n/** Helpers */\n\nimport { validateToken } from '../Utils/Helpers';\n/** Constants */\n\nimport { AUTH_USER_TOKEN_KEY } from '../Utils/constants';\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const checkUserAuth = validateToken(localStorage.getItem(AUTH_USER_TOKEN_KEY));\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      return checkUserAuth ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      })) : /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: '/login'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"names":["React","Route","Redirect","validateToken","AUTH_USER_TOKEN_KEY","PrivateRoute","component","Component","rest","checkUserAuth","localStorage","getItem","props","pathname"],"sources":["/Users/l1/WebstormProjects/Amplify-AA/src/Navigation/PrivateRoute.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n/** Helpers */\nimport { validateToken } from '../Utils/Helpers';\n\n/** Constants */\nimport { AUTH_USER_TOKEN_KEY } from '../Utils/constants';\n\nconst PrivateRoute = ({ component: Component, ...rest }: any & { component: any }) => {\n  const checkUserAuth = validateToken(localStorage.getItem(AUTH_USER_TOKEN_KEY));\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return checkUserAuth ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login'\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA;;AACA,SAASC,mBAAT,QAAoC,oBAApC;;AAEA,MAAMC,YAAY,GAAG,QAAiE;EAAA,IAAhE;IAAEC,SAAS,EAAEC,SAAb;IAAwB,GAAGC;EAA3B,CAAgE;EACpF,MAAMC,aAAa,GAAGN,aAAa,CAACO,YAAY,CAACC,OAAb,CAAqBP,mBAArB,CAAD,CAAnC;EAEA,oBACE,oBAAC,KAAD,oBACMI,IADN;IAEE,MAAM,EAAEI,KAAK,IAAI;MACf,OAAOH,aAAa,gBAClB,oBAAC,SAAD,oBAAeG,KAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GADkB,gBAGlB,oBAAC,QAAD;QACE,EAAE,EAAE;UACFC,QAAQ,EAAE;QADR,CADN;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAHF;IASD,CAZH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADF;AAgBD,CAnBD;;AAqBA,eAAeR,YAAf"},"metadata":{},"sourceType":"module"}