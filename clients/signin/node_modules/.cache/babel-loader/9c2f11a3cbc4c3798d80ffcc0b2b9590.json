{"ast":null,"code":"import _classCallCheck from\"/Users/l1/WebstormProjects/Amplify-AA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/l1/WebstormProjects/Amplify-AA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/l1/WebstormProjects/Amplify-AA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/l1/WebstormProjects/Amplify-AA/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as React from'react';import{Redirect}from'react-router-dom';import{Auth}from'aws-amplify';import{Form,Input,Icon,Button,notification,Popover,Spin,Row,Col}from'antd';/** App theme */import{colors}from'../../Themes/Colors';import FormWrapper from'../../Components/Styled/FormWrapper';var PasswordResetContainer=/*#__PURE__*/function(_React$Component){_inherits(PasswordResetContainer,_React$Component);var _super=_createSuper(PasswordResetContainer);function PasswordResetContainer(){var _this;_classCallCheck(this,PasswordResetContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={confirmDirty:false,redirect:false,loading:false};_this.handleBlur=function(event){var value=event.currentTarget.value;_this.setState({confirmDirty:_this.state.confirmDirty||!!value});};_this.compareToFirstPassword=function(rule,value,callback){var form=_this.props.form;if(value&&value!==form.getFieldValue('password')){callback('Two passwords that you enter is inconsistent!');}else{callback();}};_this.validateToNextPassword=function(rule,value,callback){var form=_this.props.form;if(value&&_this.state.confirmDirty){form.validateFields(['confirm'],{force:true});}callback();};_this.handleSubmit=function(event){event.preventDefault();_this.props.form.validateFieldsAndScroll(function(err,values){if(!err){var password=values.password,code=values.code;var username=_this.props.location.search.split('=')[1];Auth.forgotPasswordSubmit(username.trim(),code.trim(),password.trim()).then(function(){notification.success({message:'Success!',description:'Password reset successful, Redirecting you in a few!',placement:'topRight',duration:1.5,onClose:function onClose(){_this.setState({redirect:true});}});}).catch(function(err){notification['error']({message:'Error reseting password',description:err.message,placement:'topRight',duration:1.5});_this.setState({loading:false});});// show loader\n_this.setState({loading:true});}});};return _this;}_createClass(PasswordResetContainer,[{key:\"render\",value:function render(){var getFieldDecorator=this.props.form.getFieldDecorator;var _this$state=this.state,redirect=_this$state.redirect,loading=_this$state.loading;var title='Password Policy';var passwordPolicyContent=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h4\",null,\"Your password should contain: \"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"Minimum length of 8 characters\"),/*#__PURE__*/React.createElement(\"li\",null,\"Numerical characters (0-9)\"),/*#__PURE__*/React.createElement(\"li\",null,\"Special characters\"),/*#__PURE__*/React.createElement(\"li\",null,\"Uppercase letter\"),/*#__PURE__*/React.createElement(\"li\",null,\"Lowercase letter\")));return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormWrapper,{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(\"p\",null,\"Check your email for the confirmation code\")),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:24},getFieldDecorator('code',{rules:[{required:true,message:'Please input your confirmation code!'}]})(/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(Icon,{type:\"lock\",style:{color:colors.transparentBlack}}),placeholder:\"Enter your verification code\"}))))),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Popover,{placement:\"right\",title:title,content:passwordPolicyContent,trigger:\"focus\"},getFieldDecorator('password',{rules:[{required:true,message:'Please input your Password!'},{validator:this.validateToNextPassword}]})(/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(Icon,{type:\"lock\",style:{color:colors.transparentBlack}}),type:\"password\",placeholder:\"New Password\"})))),/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:24},getFieldDecorator('confirm',{rules:[{required:true,message:'Please confirm your password!'},{validator:this.compareToFirstPassword}]})(/*#__PURE__*/React.createElement(Input,{prefix:/*#__PURE__*/React.createElement(Icon,{type:\"lock\",style:{color:colors.transparentBlack}}),type:\"password\",placeholder:\"Confirm Password\",onBlur:this.handleBlur}))))),/*#__PURE__*/React.createElement(Form.Item,{className:\"text-center\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:24},/*#__PURE__*/React.createElement(Button,{style:{width:'100%'},type:\"primary\",htmlType:\"submit\",className:\"login-form-button\"},loading?/*#__PURE__*/React.createElement(Spin,{indicator:/*#__PURE__*/React.createElement(Icon,{type:\"loading\",style:{fontSize:24},spin:true})}):'Confirm username'))))),redirect&&/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/login'}}));}}]);return PasswordResetContainer;}(React.Component);export default Form.create()(PasswordResetContainer);","map":{"version":3,"names":["React","Redirect","Auth","Form","Input","Icon","Button","notification","Popover","Spin","Row","Col","colors","FormWrapper","PasswordResetContainer","state","confirmDirty","redirect","loading","handleBlur","event","value","currentTarget","setState","compareToFirstPassword","rule","callback","form","props","getFieldValue","validateToNextPassword","validateFields","force","handleSubmit","preventDefault","validateFieldsAndScroll","err","values","password","code","username","location","search","split","forgotPasswordSubmit","trim","then","success","message","description","placement","duration","onClose","catch","getFieldDecorator","title","passwordPolicyContent","rules","required","color","transparentBlack","validator","width","fontSize","pathname","Component","create"],"sources":["/Users/l1/WebstormProjects/Amplify-AA/src/Containers/PasswordResetContainer/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport { Auth } from 'aws-amplify';\nimport { Form, Input, Icon, Button, notification, Popover, Spin, Row, Col } from 'antd';\n\n/** App theme */\nimport { colors } from '../../Themes/Colors';\nimport FormWrapper from '../../Components/Styled/FormWrapper';\n\ntype Props = RouteComponentProps & {\n  form: any;\n};\n\ntype State = {\n  confirmDirty: boolean;\n  redirect: boolean;\n  loading: boolean;\n};\n\nclass PasswordResetContainer extends React.Component<Props, State> {\n  state = {\n    confirmDirty: false,\n    redirect: false,\n    loading: false\n  };\n\n  handleBlur = (event: React.FormEvent<HTMLInputElement>) => {\n    const value = event.currentTarget.value;\n\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule: object, value: string, callback: (message?: string) => void) => {\n    const form = this.props.form;\n\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule: object, value: string, callback: (message?: string) => void) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    this.props.form.validateFieldsAndScroll((err: Error, values: { password: string; code: string }) => {\n      if (!err) {\n        let { password, code } = values;\n        let username = this.props.location.search.split('=')[1];\n\n        Auth.forgotPasswordSubmit(username.trim(), code.trim(), password.trim())\n          .then(() => {\n            notification.success({\n              message: 'Success!',\n              description: 'Password reset successful, Redirecting you in a few!',\n              placement: 'topRight',\n              duration: 1.5,\n              onClose: () => {\n                this.setState({ redirect: true });\n              }\n            });\n          })\n          .catch(err => {\n            notification['error']({\n              message: 'Error reseting password',\n              description: err.message,\n              placement: 'topRight',\n              duration: 1.5\n            });\n\n            this.setState({ loading: false });\n          });\n\n        // show loader\n        this.setState({ loading: true });\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { redirect, loading } = this.state;\n\n    const title = 'Password Policy';\n    const passwordPolicyContent = (\n      <React.Fragment>\n        <h4>Your password should contain: </h4>\n        <ul>\n          <li>Minimum length of 8 characters</li>\n          <li>Numerical characters (0-9)</li>\n          <li>Special characters</li>\n          <li>Uppercase letter</li>\n          <li>Lowercase letter</li>\n        </ul>\n      </React.Fragment>\n    );\n\n    return (\n      <React.Fragment>\n        <FormWrapper onSubmit={this.handleSubmit}>\n          <div className=\"text-center\">\n            <p>Check your email for the confirmation code</p>\n          </div>\n          <Form.Item>\n            <Row>\n              <Col lg={24}>\n                {getFieldDecorator('code', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please input your confirmation code!'\n                    }\n                  ]\n                })(\n                  <Input\n                    prefix={<Icon type=\"lock\" style={{ color: colors.transparentBlack }} />}\n                    placeholder=\"Enter your verification code\"\n                  />\n                )}\n              </Col>\n            </Row>\n          </Form.Item>\n\n          <Form.Item>\n            <Popover placement=\"right\" title={title} content={passwordPolicyContent} trigger=\"focus\">\n              {getFieldDecorator('password', {\n                rules: [\n                  { required: true, message: 'Please input your Password!' },\n                  {\n                    validator: this.validateToNextPassword\n                  }\n                ]\n              })(\n                <Input\n                  prefix={<Icon type=\"lock\" style={{ color: colors.transparentBlack }} />}\n                  type=\"password\"\n                  placeholder=\"New Password\"\n                />\n              )}\n            </Popover>\n          </Form.Item>\n\n          <Form.Item>\n            <Row>\n              <Col lg={24}>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please confirm your password!'\n                    },\n                    {\n                      validator: this.compareToFirstPassword\n                    }\n                  ]\n                })(\n                  <Input\n                    prefix={<Icon type=\"lock\" style={{ color: colors.transparentBlack }} />}\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    onBlur={this.handleBlur}\n                  />\n                )}\n              </Col>\n            </Row>\n          </Form.Item>\n\n          <Form.Item className=\"text-center\">\n            <Row>\n              <Col lg={24}>\n                <Button style={{ width: '100%' }} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                  {loading ? (\n                    <Spin indicator={<Icon type=\"loading\" style={{ fontSize: 24 }} spin />} />\n                  ) : (\n                    'Confirm username'\n                  )}\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n        </FormWrapper>\n        {redirect && <Redirect to={{ pathname: '/login' }} />}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Form.create()(PasswordResetContainer);\n"],"mappings":"gmBAAA,MAAO,GAAKA,MAAZ,KAAuB,OAAvB,CACA,OAASC,QAAT,KAA8C,kBAA9C,CACA,OAASC,IAAT,KAAqB,aAArB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,IAAtB,CAA4BC,MAA5B,CAAoCC,YAApC,CAAkDC,OAAlD,CAA2DC,IAA3D,CAAiEC,GAAjE,CAAsEC,GAAtE,KAAiF,MAAjF,CAEA,gBACA,OAASC,MAAT,KAAuB,qBAAvB,CACA,MAAOC,YAAP,KAAwB,qCAAxB,C,GAYMC,uB,uYACJC,K,CAAQ,CACNC,YAAY,CAAE,KADR,CAENC,QAAQ,CAAE,KAFJ,CAGNC,OAAO,CAAE,KAHH,C,OAMRC,U,CAAa,SAACC,KAAD,CAA8C,CACzD,GAAMC,MAAK,CAAGD,KAAK,CAACE,aAAN,CAAoBD,KAAlC,CAEA,MAAKE,QAAL,CAAc,CAAEP,YAAY,CAAE,MAAKD,KAAL,CAAWC,YAAX,EAA2B,CAAC,CAACK,KAA7C,CAAd,EACD,C,OAEDG,sB,CAAyB,SAACC,IAAD,CAAeJ,KAAf,CAA8BK,QAA9B,CAAuE,CAC9F,GAAMC,KAAI,CAAG,MAAKC,KAAL,CAAWD,IAAxB,CAEA,GAAIN,KAAK,EAAIA,KAAK,GAAKM,IAAI,CAACE,aAAL,CAAmB,UAAnB,CAAvB,CAAuD,CACrDH,QAAQ,CAAC,+CAAD,CAAR,CACD,CAFD,IAEO,CACLA,QAAQ,GACT,CACF,C,OAEDI,sB,CAAyB,SAACL,IAAD,CAAeJ,KAAf,CAA8BK,QAA9B,CAAuE,CAC9F,GAAMC,KAAI,CAAG,MAAKC,KAAL,CAAWD,IAAxB,CACA,GAAIN,KAAK,EAAI,MAAKN,KAAL,CAAWC,YAAxB,CAAsC,CACpCW,IAAI,CAACI,cAAL,CAAoB,CAAC,SAAD,CAApB,CAAiC,CAAEC,KAAK,CAAE,IAAT,CAAjC,EACD,CACDN,QAAQ,GACT,C,OAEDO,Y,CAAe,SAACb,KAAD,CAA4B,CACzCA,KAAK,CAACc,cAAN,GAEA,MAAKN,KAAL,CAAWD,IAAX,CAAgBQ,uBAAhB,CAAwC,SAACC,GAAD,CAAaC,MAAb,CAA4D,CAClG,GAAI,CAACD,GAAL,CAAU,CACR,GAAME,SAAN,CAAyBD,MAAzB,CAAMC,QAAN,CAAgBC,IAAhB,CAAyBF,MAAzB,CAAgBE,IAAhB,CACA,GAAIC,SAAQ,CAAG,MAAKZ,KAAL,CAAWa,QAAX,CAAoBC,MAApB,CAA2BC,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAf,CAEAzC,IAAI,CAAC0C,oBAAL,CAA0BJ,QAAQ,CAACK,IAAT,EAA1B,CAA2CN,IAAI,CAACM,IAAL,EAA3C,CAAwDP,QAAQ,CAACO,IAAT,EAAxD,EACGC,IADH,CACQ,UAAM,CACVvC,YAAY,CAACwC,OAAb,CAAqB,CACnBC,OAAO,CAAE,UADU,CAEnBC,WAAW,CAAE,sDAFM,CAGnBC,SAAS,CAAE,UAHQ,CAInBC,QAAQ,CAAE,GAJS,CAKnBC,OAAO,CAAE,kBAAM,CACb,MAAK7B,QAAL,CAAc,CAAEN,QAAQ,CAAE,IAAZ,CAAd,EACD,CAPkB,CAArB,EASD,CAXH,EAYGoC,KAZH,CAYS,SAAAjB,GAAG,CAAI,CACZ7B,YAAY,CAAC,OAAD,CAAZ,CAAsB,CACpByC,OAAO,CAAE,yBADW,CAEpBC,WAAW,CAAEb,GAAG,CAACY,OAFG,CAGpBE,SAAS,CAAE,UAHS,CAIpBC,QAAQ,CAAE,GAJU,CAAtB,EAOA,MAAK5B,QAAL,CAAc,CAAEL,OAAO,CAAE,KAAX,CAAd,EACD,CArBH,EAuBA;AACA,MAAKK,QAAL,CAAc,CAAEL,OAAO,CAAE,IAAX,CAAd,EACD,CACF,CA/BD,EAgCD,C,wEAED,iBAAS,CACP,GAAQoC,kBAAR,CAA8B,KAAK1B,KAAL,CAAWD,IAAzC,CAAQ2B,iBAAR,CACA,gBAA8B,KAAKvC,KAAnC,CAAQE,QAAR,aAAQA,QAAR,CAAkBC,OAAlB,aAAkBA,OAAlB,CAEA,GAAMqC,MAAK,CAAG,iBAAd,CACA,GAAMC,sBAAqB,cACzB,oBAAC,KAAD,CAAO,QAAP,mBACE,+DADF,cAEE,2CACE,+DADF,cAEE,2DAFF,cAGE,mDAHF,cAIE,iDAJF,cAKE,iDALF,CAFF,CADF,CAaA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,oBAAC,WAAD,EAAa,QAAQ,CAAE,KAAKvB,YAA5B,eACE,2BAAK,SAAS,CAAC,aAAf,eACE,0EADF,CADF,cAIE,oBAAC,IAAD,CAAM,IAAN,mBACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,EACGqB,iBAAiB,CAAC,MAAD,CAAS,CACzBG,KAAK,CAAE,CACL,CACEC,QAAQ,CAAE,IADZ,CAEEV,OAAO,CAAE,sCAFX,CADK,CADkB,CAAT,CAAjB,cAQC,oBAAC,KAAD,EACE,MAAM,cAAE,oBAAC,IAAD,EAAM,IAAI,CAAC,MAAX,CAAkB,KAAK,CAAE,CAAEW,KAAK,CAAE/C,MAAM,CAACgD,gBAAhB,CAAzB,EADV,CAEE,WAAW,CAAC,8BAFd,EARD,CADH,CADF,CADF,CAJF,cAwBE,oBAAC,IAAD,CAAM,IAAN,mBACE,oBAAC,OAAD,EAAS,SAAS,CAAC,OAAnB,CAA2B,KAAK,CAAEL,KAAlC,CAAyC,OAAO,CAAEC,qBAAlD,CAAyE,OAAO,CAAC,OAAjF,EACGF,iBAAiB,CAAC,UAAD,CAAa,CAC7BG,KAAK,CAAE,CACL,CAAEC,QAAQ,CAAE,IAAZ,CAAkBV,OAAO,CAAE,6BAA3B,CADK,CAEL,CACEa,SAAS,CAAE,KAAK/B,sBADlB,CAFK,CADsB,CAAb,CAAjB,cAQC,oBAAC,KAAD,EACE,MAAM,cAAE,oBAAC,IAAD,EAAM,IAAI,CAAC,MAAX,CAAkB,KAAK,CAAE,CAAE6B,KAAK,CAAE/C,MAAM,CAACgD,gBAAhB,CAAzB,EADV,CAEE,IAAI,CAAC,UAFP,CAGE,WAAW,CAAC,cAHd,EARD,CADH,CADF,CAxBF,cA2CE,oBAAC,IAAD,CAAM,IAAN,mBACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,EACGN,iBAAiB,CAAC,SAAD,CAAY,CAC5BG,KAAK,CAAE,CACL,CACEC,QAAQ,CAAE,IADZ,CAEEV,OAAO,CAAE,+BAFX,CADK,CAKL,CACEa,SAAS,CAAE,KAAKrC,sBADlB,CALK,CADqB,CAAZ,CAAjB,cAWC,oBAAC,KAAD,EACE,MAAM,cAAE,oBAAC,IAAD,EAAM,IAAI,CAAC,MAAX,CAAkB,KAAK,CAAE,CAAEmC,KAAK,CAAE/C,MAAM,CAACgD,gBAAhB,CAAzB,EADV,CAEE,IAAI,CAAC,UAFP,CAGE,WAAW,CAAC,kBAHd,CAIE,MAAM,CAAE,KAAKzC,UAJf,EAXD,CADH,CADF,CADF,CA3CF,cAoEE,oBAAC,IAAD,CAAM,IAAN,EAAW,SAAS,CAAC,aAArB,eACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACE,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAAE2C,KAAK,CAAE,MAAT,CAAf,CAAkC,IAAI,CAAC,SAAvC,CAAiD,QAAQ,CAAC,QAA1D,CAAmE,SAAS,CAAC,mBAA7E,EACG5C,OAAO,cACN,oBAAC,IAAD,EAAM,SAAS,cAAE,oBAAC,IAAD,EAAM,IAAI,CAAC,SAAX,CAAqB,KAAK,CAAE,CAAE6C,QAAQ,CAAE,EAAZ,CAA5B,CAA8C,IAAI,KAAlD,EAAjB,EADM,CAGN,kBAJJ,CADF,CADF,CADF,CApEF,CADF,CAmFG9C,QAAQ,eAAI,oBAAC,QAAD,EAAU,EAAE,CAAE,CAAE+C,QAAQ,CAAE,QAAZ,CAAd,EAnFf,CADF,CAuFD,C,oCA7KkChE,KAAK,CAACiE,S,EAgL3C,cAAe9D,KAAI,CAAC+D,MAAL,GAAcpD,sBAAd,CAAf"},"metadata":{},"sourceType":"module"}